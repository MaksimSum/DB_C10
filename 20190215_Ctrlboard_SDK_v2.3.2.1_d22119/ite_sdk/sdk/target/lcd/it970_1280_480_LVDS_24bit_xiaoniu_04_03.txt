/*
 * MIPI LCD Initialization Script
 *
 * Date          : 2019/1/3
 * Chip Type     : IT970
 * Resolution    : 480x1280
 * Color format  : RGB565
 * LCD interface : 24-bits
 * Build version : 0.0.0.253
 * SHA1 hash     : 7a81040e9607065c3da45706bfd485d506ef310c
 * 
 */

/* ************************************************* */
/*               Please don't remove!                */
/* ************************************************* */
/*@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@*/

/* ************************************************* */
/*                        RES GPIO24                */
/* ************************************************* */
//WRITE(0xD1000008, 0x01000000);  // GPIO24 set dir output
//WRITE(0xD100000c, 0x01000000);  // GPIO24 set high       
//wait(10); 
//WRITE(0xD1000010, 0x01000000);  // GPIO24 set LOW     
//wait(30000);//us
//WRITE(0xD100000c, 0x01000000);  // GPIO24 set high       
//wait(120000);//120ms
/* ************************************************* */
/*     IT970, MIPI Interface mode, Clock Setting     */
/* ************************************************* */
// LP
WRITE(0xD8000048, 0x0002C803);    // KESCCLK
// HS
WRITE(0xD8000028, 0x002AC801);    // DCLK
WRITE(0xD800004C, 0xC002C801);    // KDSICLK
WRITE(0xD8000044, 0xC00AC881);    // KCLK

/* ************************************************* */
/*              PLL3 ck3_n1, 0xD8000000              */
/* ************************************************* */
WRITE(0xD8000120, 0x20380E01);
WRITE(0xD8000124, 0x80000000);
WRITE(0xD8000124, 0xF3000000);
wait(220);                        // IDLE 220
WRITE(0xD8000124, 0x80000000);

// IO output mode
WRITE(0xD0000110, 0x0000000F);    // (0x0000000F DEFAULT VALUE)

/* ************************************************* */
/*     LCD Setting (CPUIF FOR DBI), 0xd000_0000      */
/* ************************************************* */
WRITE(0xD0000004, 0x0F7F0410);    // CPUIF

/* ************************************************* */
/*             Port Setting 0xD000_0000              */
/* ************************************************* */
// MIPI enable
WRITE(0xD0000230, 0x00000016);    // [0]:MIPI enable,[1]:HsyncValue,[2]:VsyncValue,[3]:DEValue
wait(10);                         // 10 μs
WRITE(0xD0000230, 0x00000017);    // [0]:MIPI enable
wait(5);                          // 5 μs

/* ************************************************* */
/*                       MIPI                        */
/* ************************************************* */
WRITE(0xD800004C, 0x0002C001);    // MIPI controller normal
wait(1);
WRITE(0xD8000048, 0x8002C003);    // DPHY Enable
wait(100);
WRITE(0xD8000044, 0x400AC081);    // DPHY PORn rst normal
wait(75);
WRITE(0xD8000044, 0x1F0AC081);    // DPHY ResetN rst normal, enable P/N swap.
wait(200);

/* ************************************************* */
/*          MIPI DPHY reg base: 0xDC100000           */
/* ************************************************* */
WRITE(0xDC100034, 0x00842164);    // lane swap default
wait(150);

/* ************************************************* */
/*          MIPI reg base: 0xd0c00000 (LP)           */
/* ************************************************* */
// ----------LP----------- //
WRITE(0xD0C00004, 0x004F028F);    // $6[7]=BLLP, +$04[0]=EOTPGE
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000001B);
wait(10);
wait(150);
// -------MIPI End-------- //
wait(200000);

/* ************************************************* */
/*                   CPUIF Setting                   */
/* ************************************************* */
WRITE(0xD00000F4, 0x50413232);    // CSN,DCN,WRN,RDN
WRITE(0xD00000F8, 0x00000000);    // 8bit cmd, no sync data

/* ************************************************* */
/*                MIPI Panel initial                 */
/* ************************************************* */
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0F0);    // cmd 0xF0
wait(1);
WRITE(0xD00000F0, 0x0002B05A);    // data 0x5A
wait(1);
WRITE(0xD00000F0, 0x0002B05A);    // data 0x5A
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0F1);    // cmd 0xF1
wait(1);
WRITE(0xD00000F0, 0x0002B0A5);    // data 0xA5
wait(1);
WRITE(0xD00000F0, 0x0002B0A5);    // data 0xA5
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B6);    // cmd 0xB6
wait(1);
WRITE(0xD00000F0, 0x0002B03C);    // data 0x3C
wait(1);
WRITE(0xD00000F0, 0x0002B03C);    // data 0x3C
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B3);    // cmd 0xB3
wait(1);
WRITE(0xD00000F0, 0x0002B01D);    // data 0x1D
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x0002B01E);    // data 0x1E
wait(1);
WRITE(0xD00000F0, 0x0002B01F);    // data 0x1F
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0002B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0002B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0002B00E);    // data 0x0E
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B01C);    // data 0x1C
wait(1);
WRITE(0xD00000F0, 0x0002B004);    // data 0x04
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03, GOA mapping
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B4);    // cmd 0xB4
wait(1);
WRITE(0xD00000F0, 0x0002B01D);    // data 0x1D
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x0002B01E);    // data 0x1E
wait(1);
WRITE(0xD00000F0, 0x0002B01F);    // data 0x1F
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B013);    // data 0x13
wait(1);
WRITE(0xD00000F0, 0x0002B00D);    // data 0x0D
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B01C);    // data 0x1C
wait(1);
WRITE(0xD00000F0, 0x0002B005);    // data 0x05
wait(1);
WRITE(0xD00000F0, 0x0002B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03
wait(1);
WRITE(0xD00000F0, 0x0002B003);    // data 0x03, GOA mapping
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B0);    // cmd 0xB0
wait(1);
WRITE(0xD00000F0, 0x0002B076);    // data 0x76
wait(1);
WRITE(0xD00000F0, 0x0002B054);    // data 0x54
wait(1);
WRITE(0xD00000F0, 0x0002B0BB);    // data 0xBB
wait(1);
WRITE(0xD00000F0, 0x0002B0BB);    // data 0xBB
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B022);    // data 0x22
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B06E);    // data 0x6E
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B00E);    // data 0x0E, pre-charge on
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B1);    // cmd 0xB1
wait(1);
WRITE(0xD00000F0, 0x0002B053);    // data 0x53
wait(1);
WRITE(0xD00000F0, 0x0002B0A0);    // data 0xA0
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B022);    // data 0x22
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B06E);    // data 0x6E
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B05F);    // data 0x5F, pre-charge on//
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B2);    // cmd 0xB2
wait(1);
WRITE(0xD00000F0, 0x0002B037);    // data 0x37
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x0002B089);    // data 0x89
wait(1);
WRITE(0xD00000F0, 0x0002B008);    // data 0x08
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B022);    // data 0x22
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B044);    // data 0x44
wait(1);
WRITE(0xD00000F0, 0x0002B0D9);    // data 0xD9, GCH1/2 ???? 3ms ;
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0BD);    // cmd 0xBD
wait(1);
WRITE(0xD00000F0, 0x0002B04E);    // data 0x4E
wait(1);
WRITE(0xD00000F0, 0x0002B00E);    // data 0x0E
wait(1);
WRITE(0xD00000F0, 0x0002B041);    // data 0x41
wait(1);
WRITE(0xD00000F0, 0x0002B041);    // data 0x41
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B01E);    // data 0x1E
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B7);    // cmd 0xB7
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B00D);    // data 0x0D
wait(1);
WRITE(0xD00000F0, 0x0002B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0002B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x0002B00D);    // data 0x0D
wait(1);
WRITE(0xD00000F0, 0x0002B021);    // data 0x21
wait(1);
WRITE(0xD00000F0, 0x0002B01D);    // data 0x1D
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B020);    // data 0x20
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x02
wait(1);
WRITE(0xD00000F0, 0x0002B0FF);    // data 0xFF
wait(1);
WRITE(0xD00000F0, 0x0002B03C);    // data 0x3C
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0B8);    // cmd 0xB8
wait(1);
WRITE(0xD00000F0, 0x0002B023);    // data 0x23
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x0002B030);    // data 0x30
wait(1);
WRITE(0xD00000F0, 0x0002B034);    // data 0x34
wait(1);
WRITE(0xD00000F0, 0x0002B053);    // data 0x53
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C1);    // cmd 0xC1
wait(1);
WRITE(0xD00000F0, 0x0002B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0002B00E);    // data 0x0E
wait(1);
WRITE(0xD00000F0, 0x0002B002);    // data 0x01 //0x02
wait(1);
WRITE(0xD00000F0, 0x0002B036);    // data 0x36
wait(1);
WRITE(0xD00000F0, 0x0002B03A);    // data 0x3A
wait(1);
WRITE(0xD00000F0, 0x0002B010);    // data 0x08, 14-15-1 //0x10
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C2);    // cmd 0xC2
wait(1);
WRITE(0xD00000F0, 0x0002B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0002B040);    // data 0x40, Resolution
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C3);    // cmd 0xC3
wait(1);
WRITE(0xD00000F0, 0x0002B022);    // data 0x22
wait(1);
WRITE(0xD00000F0, 0x0002B031);    // data 0x31
wait(1);
WRITE(0xD00000F0, 0x0002B004);    // data 0x04
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C7);    // cmd 0xC7
wait(1);
WRITE(0xD00000F0, 0x0002B005);    // data 0x05
wait(1);
WRITE(0xD00000F0, 0x0002B023);    // data 0x23
wait(1);
WRITE(0xD00000F0, 0x0002B06B);    // data 0x6B
wait(1);
WRITE(0xD00000F0, 0x0002B041);    // data 0x41
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C8);    // cmd 0xC8
wait(1);
WRITE(0xD00000F0, 0x0002B07C);    // data 0x7C
wait(1);
WRITE(0xD00000F0, 0x0002B05E);    // data 0x5E
wait(1);
WRITE(0xD00000F0, 0x0002B04D);    // data 0x4D
wait(1);
WRITE(0xD00000F0, 0x0002B041);    // data 0x41
wait(1);
WRITE(0xD00000F0, 0x0002B03D);    // data 0x3D
wait(1);
WRITE(0xD00000F0, 0x0002B02F);    // data 0x2F
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B01D);    // data 0x1D
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B054);    // data 0x54
wait(1);
WRITE(0xD00000F0, 0x0002B043);    // data 0x43
wait(1);
WRITE(0xD00000F0, 0x0002B04C);    // data 0x4C
wait(1);
WRITE(0xD00000F0, 0x0002B03E);    // data 0x3E
wait(1);
WRITE(0xD00000F0, 0x0002B03C);    // data 0x3C
wait(1);
WRITE(0xD00000F0, 0x0002B02F);    // data 0x2F
wait(1);
WRITE(0xD00000F0, 0x0002B01C);    // data 0x1C
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06
wait(1);
WRITE(0xD00000F0, 0x0002B07C);    // data 0x7C
wait(1);
WRITE(0xD00000F0, 0x0002B05E);    // data 0x5E
wait(1);
WRITE(0xD00000F0, 0x0002B04D);    // data 0x4D
wait(1);
WRITE(0xD00000F0, 0x0002B041);    // data 0x41
wait(1);
WRITE(0xD00000F0, 0x0002B03D);    // data 0x3D
wait(1);
WRITE(0xD00000F0, 0x0002B02F);    // data 0x2F
wait(1);
WRITE(0xD00000F0, 0x0002B033);    // data 0x33
wait(1);
WRITE(0xD00000F0, 0x0002B01D);    // data 0x1D
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B035);    // data 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B054);    // data 0x54
wait(1);
WRITE(0xD00000F0, 0x0002B043);    // data 0x43
wait(1);
WRITE(0xD00000F0, 0x0002B04C);    // data 0x4C
wait(1);
WRITE(0xD00000F0, 0x0002B03E);    // data 0x3E
wait(1);
WRITE(0xD00000F0, 0x0002B03C);    // data 0x3C
wait(1);
WRITE(0xD00000F0, 0x0002B02F);    // data 0x2F
wait(1);
WRITE(0xD00000F0, 0x0002B01C);    // data 0x1C
wait(1);
WRITE(0xD00000F0, 0x0002B006);    // data 0x06, G2.2
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0002A0C6);    // cmd 0xC6
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B068);    // data 0x68
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0002B060);    // data 0x60
wait(1);
WRITE(0xD00000F0, 0x0002B036);    // data 0x36
wait(1);
WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A035);    // cmd 0x35
wait(1);
WRITE(0xD00000F0, 0x0002B001);    // data 0x01
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0002A036);    // cmd 0x36
wait(1);
WRITE(0xD00000F0, 0x0002B014);    // data 0x14
wait(1);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

//WRITE(0xD0000230, 0x10150017);    // ct=15
//wait(1);
//WRITE(0xD00000F0, 0x0002A0C0);    // cmd 0xC0
//wait(1);
//WRITE(0xD00000F0, 0x0002B011);    // data 0x11
//wait(1);
//WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
//wait(1);

// Sleep Out
WRITE(0xD0000230, 0x10050017);    // ct=05
wait(1);
WRITE(0xD00000F0, 0x0002A011);    // cmd 0x11
//wait(1);
//WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
wait(120000);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);

////// Display ON
WRITE(0xD0000230, 0x10050017);    // ct=05
wait(1);
WRITE(0xD00000F0, 0x0002A029);    // cmd 0x29
//wait(1);
//WRITE(0xD00000F0, 0x0002B000);    // data 0x00
//WRITE(0xD00000F0, 0x0002B000);    // data 0x00
wait(1);
wait(120000);
WRITE(0xD00000F0, 0x00033000);    // Force CSN=1, DCN=1
wait(1);
/* ************************************************* */
/*         LCD Register Setting, 0xd000_0000         */
/* ************************************************* */
//WRITE(0xD0000000, 0x40000070);    // DRAM mode, dclk, Falling latch
//WRITE(0xD0000000, 0x00000071);    // DRAM mode, dclk, Falling latch
//WRITE(0xD0000004, 0x0F7F0A60);    // SRC:RGB565, dst 24-bits
//WRITE(0xD0000008, 0x050001E0);    // Layer1:W480xH1280
//WRITE(0xD000000C, 0x000003C0);    // pitch=480 X 2=960

WRITE(0xD0000000, 0x70000070);    // DRAM mode, dclk, Falling latch
WRITE(0xD0000004, 0x0F7F0A60);    // SRC:RGB565, dst 24-bits
WRITE(0xD0000008, 0x01E00500);    // Layer1:W1280xH480
WRITE(0xD000000C, 0x00000A00);    // pitch=1280 X 2=2560
WRITE(0xD0000010, 0x00000000);    // baseA addr
WRITE(0xD0000014, 0x00000000);    // baseB addr
WRITE(0xD0000018, 0x00000000);    // baseC addr

/* ************************************************* */
/*                  Test Color Mode                  */
/* ************************************************* */
WRITE(0xD0000020, 0x800000FF);    // test color mode=0, None

/* ************************************************* */
/*                    CTG Setting                    */
/* ************************************************* */
WRITE(0xD0000070, 0x00010300);    // ctg_reset_on
wait(1);                          // 1 μs
WRITE(0xD0000070, 0x00000300);    // ctg_reset_off

WRITE(0xD0000070, 0x00000307);    // enable ctg 0 1 2
WRITE(0xD0000074, 0x051F0258);    // htotal=0x0258, vtotal=0x051F

//CTG0 (Hsync)
WRITE(0xD0000078, 0x20010258);    // set0,p1, line x=htotal,        y=1
WRITE(0xD000007C, 0x10010008);    // set1,p2       x=HOR.SYNC TIME, y=1
WRITE(0xD0000080, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000084, 0x00000000);    // set0,p4(0x0,0)

//CTG1 (Vsync)
WRITE(0xD0000088, 0x60010258);    // set0,p1 ,frame  x=htotal, y=1
WRITE(0xD000008C, 0x10030258);    // set1,p2         x=htotal, y=VER.SYNC TIME+1
WRITE(0xD0000090, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000094, 0x00000000);    // set0,p4(0x0,0)

//CTG2 (DE)
WRITE(0xD0000098, 0x1013003E);    // set1,p1, line
WRITE(0xD000009C, 0x2513021E);    // set0,p2 x=HOR.SYNC TIME+HBP+Hor. display area y=(VER.SYNC TIME+1)+VBP+1+Ver. display area
WRITE(0xD00000A0, 0x1013003E);    // set1,p3
WRITE(0xD00000A4, 0x2513021E);    // set0,p4

/* ************************************************* */
/*         MIPI reg base: 0xd0c00000   (HS)          */
/* ************************************************* */
//----------HS-----------//
WRITE(0xD0C00004, 0x004F028E);    // 0x6[7]=BLLP, +0x04[0]=EOTPGE
WRITE(0xD0C00008, 0x00640064);
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000003E);    // RGB666(0x1E),RGB888(0x3E)
WRITE(0xD0C00018, 0x00241008);    // +0x18[5:0]=CLWR
WRITE(0xD0C0001C, 0x00000000);    // 24-bits pixel
WRITE(0xD0C00020, 0x000001E0);    // HACT=480(0x01E0)
WRITE(0xD0C00028, 0x000005A0);    // 480*3(0x05A0)
// Write d0c0003c 000000ff f
WRITE(0xD0C00048, 0x00000005);    // +0x48[6]=HSE Pkt
// Write d0c00050 000006a0 f
WRITE(0xD0C00054, 0x00000000);    // HSS(4)+HSA*3+HSE(4)+HBP*3+4+HACT*3+2+HFP*3
WRITE(0xD0C00058, 0x00000010);
WRITE(0xD0C00080, 0x000F0002);    // VBP=15(0x0F), VSA=2(0x02)
WRITE(0xD0C00084, 0x0500000E);    // VACT=1280(0x500), VFP=14(0x0E)
WRITE(0xD0C00088, 0x02100000);    // HBP=54*3(0x00A2), HSA=8*3(0x18)
WRITE(0xD0C0008C, 0x00000000);    // HFP=58*3(0x00AE)

WRITE(0xD0C00050, 0x00000000);    // pixel fifo threshold

wait(10);
wait(150);
// -------MIPI End-------- //
/* ************************************************* */
/*               PWM: GPIO21 assign 1                */
/* ************************************************* */
//WRITE(0xD1000008, 0x01200000);    // GPIO21 set dir output
//WRITE(0xD100000c, 0x00200000);    // GPIO21 set high 

WRITE(0xD000001C, 0x00000001);    // SyncEn
wait(1);                          // 1 μs
WRITE(0xD000001C, 0x00000003);    // SyncEn DisplayEn
